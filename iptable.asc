=== iptables


==== Acerca de iptables

---

Desde la versión 2.4 del Kernel de Linux, se imnplementó __iptables__ como firewall principal del sistema operativo.

Este se basa en la declaración de reglas y políticas.
El objetivo de estas declaraciones, es que el firewall pueda leerlas y ejecutar operaciones que mantengan la integridad de la red con respecto a estas.

Generalmente podemos encontrar instalado este paquete en nuestros firmwares basados en Linux, incluyendo Android.
Sin embargo, solo soporta ipv4, para ipv6 se necesita utilizar en su lugar __ip6tables__.

==== Instalación

---

Si bien es cierto, __iptables__ se considera un paquete esencial en las distribuciones Linux, a continuación mostramos su instalación manual, sólo se requiere iniciar la consola en modo superusuario o agregar el comando __sudo__ al inicio de cada línea.

===== Verificación Inicial

1.	Ejecutar **__iptables -L__**
+
image::iptables1-1.png[align="center"]
+
Comprobamos que __iptables__ no está instalado en la máquina.

===== Instalación

1.	Ejecutar **__apt-get update__**
+
image::iptables2-1.png[align="center"]

2.	Ejecutar **__apt-get install iptables__**
+
image::iptables2-2.png[align="center"]
+
image::iptables2-3.png[align="center"]

===== Verificación de Instalación

1.	Ejecutar **__iptables -L__**
+
image::iptables3-1.png[align="center"]
+
Comprobamos que __iptables__ está instalado en la máquina.

==== Configuración

---
===== Creación de Archivo de configuración - __iptables.config.bash__

Si bien es cierto, existen comandos que directamente configuran las reglas y políticas, optamos por definir estas en un sólo archivo para poder dar un seguimiento, mantenimiento y administración del firewall de una manera más amigable y clara. 

1.	Ejecutar **__vi iptables.config.bash__**
+
image::iptables4-1.png[align="center"]


===== Eliminación de Reglas Existentes

En caso de querer configurar el firewall desde cero, omitiendo las reglas presetablecidas por el sistema o por un usuario previo, eliminamos las reglas activas existentes.

1.	Añadir **__iptables -F__** (Borra las reglas de una cadena)

2.	Añadir **__iptables -X__** (Borra una cadena)

3.	Añadir **__iptables -Z__** (Reinicia a 0, los contadores de una cadena)

4.	Añadir **__iptables -t nat -F__** (Borra las reglas la tabla de enrutamiento __nat__)
+
image::iptables4-2.png[align="center"]

===== Políticas por defecto

Por defecto se debe configurar el firewall de manera que acepte todas las conexiones.

1.	Añadir **__iptables -P INPUT ACCEPT__** (Aceptar conexiones entrantes)

2.	Añadir **__iptables -P FORWARD ACCEPT__** (Aceptar conexiones internas)

3.	Añadir **__iptables -P OUTPUT ACCEPT__** (Aceptar conexiones salientes)

4.	Añadir **__iptables -t nat -P PREROUTING ACCEPT__** (Aceptar conexiones destino de la tabla nat)

5.	Añadir **__iptables -t nat -P POSTROUTING ACCEPT__** (Aceptar conexiones origen de la tabla nat)
+
image::iptables4-3.png[align="center"]

===== Comunicaciones __localhost__

Para evitar errores en el sistema, aceptamos todas las comunicaciones del localhost.

1.	Añadir **__iptables -A INPUT -p tcp -s localhost -j ACCEPT__** (Aceptar conexiones entrantes)
+
image::iptables4-4.png[align="center"]

===== Comunicaciones __Personalizadas__ (Denegación)

Denegamos las comunicaciones que no nos interesan.

1.	Añadir **__iptables -A FORWARD -s 10.0.1.0/24 -j DROP__** (Ejemplo: Denegamos las comunicaciones en la red 10.0.1.0/24)
+
image::iptables4-5.png[align="center"]

===== Comunicaciones __Personalizadas__ (Aceptación de Puertos)

Aceptamos las comunicaciones de los puertos que nos interesan.		

1.	Añadir **__iptables -A FORWARD -s 10.0.0.0/8 -p tcp --dport 25 -j ACCEPT__** (Ejemplo: Aceptamos las comunicaciones en el puerto tcp 25)
+
2.	Añadir **__iptables -A FORWARD -s 10.0.0.0/8 -p tcp --dport 110 -j ACCEPT__** (Ejemplo: Aceptamos las comunicaciones en el puerto tcp 110)
+
3.	Añadir **__iptables -A FORWARD -s 10.0.0.0/8 -p tcp --dport 20 -j ACCEPT__** (Ejemplo: Aceptamos las comunicaciones en el puerto tcp 20)
+
4.	Añadir **__iptables -A FORWARD -s 10.0.0.0/8 -p tcp --dport 21 -j ACCEPT__** (Ejemplo: Aceptamos las comunicaciones en el puerto tcp 21)
+
5.	Añadir **__iptables -A FORWARD -s 10.0.0.0/8 -p tcp --dport 53 -j ACCEPT__** (Ejemplo: Aceptamos las comunicaciones en el puerto tcp 53)
+
6.	Añadir **__iptables -A FORWARD -s 10.0.0.0/8 -p udp --dport 53 -j ACCEPT__** (Ejemplo: Aceptamos las comunicaciones en el puerto udp 53)
+
image::iptables4-6.png[align="center"]

===== NAT

Activamos el enmascaramiento en la tabla __nat__.

1.	Añadir **__iptables -t nat -A POSTROUTING -s 10.0.0.0/8 -o eth0 -j MASQUERADE__**
+
image::iptables4-7.png[align="center"]

===== Activación de Configuraciones de Enrutamiento

Activamos las configuraciones del enrutamiento.

1.	Añadir **__echo 1 > /proc/sys/net/ipv4/ip_forward__**
+
image::iptables4-8.png[align="center"]

===== Guardar configuraciones

==== Operación

---
===== Asignación de Permisos del Archivo de configuración - __iptables.config.bash__

Para poder ejecutar el archivo creado, necesitamos darle permisos de ejecución. 

1.	Ejecutar **__chmod 4777 ./iptables.config.bash__**
+
image::iptables5-1.png[align="center"]

===== Ejecución Creación de Archivo de configuración - __iptables.config.bash__

Para que las configuraciones que escribimos se apliquen, procedemos a ejecutar el archivo que creamos. 

1.	Ejecutar **__bash ./iptables.config.bash__**
+
image::iptables5-2.png[align="center"]

==== Validación

---

Para visualizar las reglas activas ejecutamos el comando. 

1.	Ejecutar **__iptables -L -v__**
+
image::iptables6-1.png[align="center"]

Podemos ver que las reglas que especificamos ya están activas, por lo tanto, el firewall está activo y configurado.